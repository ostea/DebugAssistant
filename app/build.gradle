apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.mm.debugassistant"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    signingConfigs {
        androidConfig {
            storePassword "android"
            keyPassword "android"
            keyAlias "platform"
            storeFile file("../keystore/platform_debug.keystore.android")
        }
        mfcConfig {
            storePassword "valormfc"
            keyPassword "valormfc"
            storeFile file("../keystore/platform.keystore.mfc")
            keyAlias "platform"
        }
        btvConfig {
            storePassword "btvbox"
            keyPassword "btvbox"
            storeFile file("../keystore/platform.keystore.btv")
            keyAlias "platform"
        }

        flavorDimensions "platform"
        productFlavors {
            mfc {
                dimension "platform"
                signingConfig signingConfigs.mfcConfig
            }

            btv {
                dimension "platform"
                signingConfig signingConfigs.btvConfig
            }

            nornal {
                dimension "platform"
                signingConfig signingConfigs.androidConfig
            }
        }

        applicationVariants.all { variant ->
            def SEP = "_"
            def flavor = variant.productFlavors[0].name
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionName
            def newApkName = "DebugAssistant" + SEP + flavor + SEP + buildType + SEP + version + ".apk"
            variant.outputs.all {
                outputFileName = newApkName
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.btvConfig
        }
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies["espresso-core"],{
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    // butterknife
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }
    // Toasty
    implementation rootProject.ext.dependencies["Toasty"]
    //apache
    implementation rootProject.ext.dependencies["commons"]
    implementation rootProject.ext.dependencies["commons-io"]
    //retrofit
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["logging-interceptor"]
    // RxJava 2
    implementation rootProject.ext.dependencies["rxandroid2"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["socket-io-client"],{
        exclude group: 'org.json', module: 'json'
    }
    implementation rootProject.ext.dependencies["timber"]
    testImplementation rootProject.ext.dependencies["junit"]
}
